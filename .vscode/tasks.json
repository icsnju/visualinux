{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "options": {
        "cwd": "${workspaceFolder}/",
        "env": {}
    },
    "tasks": [
        {
            "label": "startup",
            "dependsOrder": "parallel",
            "dependsOn": ["gdb-qemu-startup", "visualizer-startup"]
        },
        {
            "type": "shell",
            "label": "gdb-qemu-startup",
            "command": "make",
            "args": ["gdb-start"],
            "isBackground": true, // must enabled else deadlock while debugging in local
            // This task is run before some debug tasks.
            // Problem is, it's a watch script, and since it never exits, VSCode
            // complains. All this is needed so VSCode just lets it run.
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": ".",
                        "endsPattern": ".",
                    }
                }
            ]
        }, {
            "type": "shell",
            "label": "visualizer-startup",
            "command": "npm run dev",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}/visualizer"
            },
            "presentation": {
                "panel": "dedicated",
                // "reveal": "silent",
                "revealProblems": "onProblem",
                "close": false
            },
            // Problem is, it's a watch script, and since it never exits, VSCode
            // complains. All this is needed so VSCode just lets it run.
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": ".",
                        "endsPattern": ".",
                    }
                }
            ]
        }, {
            "label": "stopall",
            "command": "echo ${input:terminate}",
            "type": "shell"
        },
    ],
    "inputs": [{
        "id": "terminate",
        "type": "command",
        "command": "workbench.action.tasks.terminate",
        "args": "terminateAll"
    }]
}
